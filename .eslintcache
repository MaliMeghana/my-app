[{"D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\index.js":"1","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\App.js":"2","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\Receipt.js":"3","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\Contact.js":"4","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\ProductG.js":"5","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\HomeBody.js":"6","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\Login.js":"7","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\ProductBed.js":"8","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\ProductDesk.js":"9","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\OrderSend.js":"10"},{"size":376,"mtime":1611901058183,"results":"11","hashOfConfig":"12"},{"size":7778,"mtime":1611860349572,"results":"13","hashOfConfig":"12"},{"size":4443,"mtime":1611860810743,"results":"14","hashOfConfig":"12"},{"size":730,"mtime":1611295986046,"results":"15","hashOfConfig":"12"},{"size":4844,"mtime":1611858317640,"results":"16","hashOfConfig":"12"},{"size":3347,"mtime":1611136358792,"results":"17","hashOfConfig":"12"},{"size":1570,"mtime":1611247916053,"results":"18","hashOfConfig":"12"},{"size":4837,"mtime":1611859235875,"results":"19","hashOfConfig":"12"},{"size":4840,"mtime":1611859213376,"results":"20","hashOfConfig":"12"},{"size":1755,"mtime":1611917488579,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6yx3l0",{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\index.js",["49"],"D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\App.js",["50","51","52","53","54","55","56"],"import \"./App.css\";\nimport {useState,useEffect} from 'react';\nimport Modal from 'react-bootstrap/Modal';\n\n//Routing\nimport {Route, Switch, useHistory,useLocation} from 'react-router-dom';\nimport {NavLink} from 'react-router-dom';\nimport HomeBody from \"./HomeBody\";\nimport Contact from \"./Contact\";\nimport ProductG from \"./ProductG\";\nimport ProductBed from \"./ProductBed\";\nimport ProductDesk from \"./ProductDesk\";\nimport Receipt from \"./Receipt\";\nimport Login from \"./Login\";\nimport OrderSend from \"./OrderSend\";\n//main\nfunction App() {  \n  \n  return (\n    <div className=\"container-fluid \">\n     \n     <Nav/>\n     <Switch>\n       <Route exact path=\"/\" component={HomeBody} />\n       <Route path=\"/contact\" component={Contact} />\n       <Route path=\"/Product\" component={ProductG} />\n       <Route path=\"/ProductDesk\" component={ProductDesk} />\n       <Route path=\"/ProductBed\" component={ProductBed} />\n       <Route path=\"/Receipt\" component={Receipt} />\n       <Route path=\"/Login\" component={Login} />    \n       <Route path=\"/OrderSend\" component={OrderSend} />     \n     </Switch>    \n     \n    </div>\n  );\n}\n\nfunction Nav(props){\n  const [product,setProduct]=useState([]);\n  const [p,setP]=useState();\n  // useEffect(()=>{    \n  // let productList=[ {id:\"1\",name:\"Sofa Set\"},{id:\"2\",name:\"Bed\"},{id:\"3\",name:\"Recliner\"},{id:\"4\",name:\"Desk\"}];\n  //    setProduct(productList);\n  // },[]);\n\n  // const checkProduct=(props)=>{\n  //   console.log(props.id); \n  //   setP(props.id);\n  // }\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  //set user\n  const [user1,setUser1]=useState({\n    name:\"\",\n    password:\"\",\n    email:\"\",\n    add:\"\",\n    mobile:\"\",\n  });\n  const localuser=localStorage.getItem(\"user\");\n  const localuserobj=JSON.parse(localuser);\n\n  const LogOut=()=>{\n    setUser1({\n      name:\"\",\n      password:\"\",\n      email:\"\",\n      add:\"\",\n      mobile:\"\", \n     });\n     localStorage.setItem(\"user\",JSON.stringify(user1));\n  };\n  //validate user\n  const history=useHistory();\n  const [user,setUser]=useState({email:\"\",password:\"\"});\n  const [loginProgress, setLoginProgress] = useState(false);\n  \n    const proEmail = (e) => setUser({...user,email:e.target.value});\n    const proPwd = (e) => setUser({...user,password:e.target.value});\n    const processLogin=()=>{\n      if (user.email === \"\" || user.pwd === \"\") {\n        alert(\"Fail\");\n        return;\n      }\n      setLoginProgress(true);\n      setTimeout(()=>{\n        const localuser=localStorage.getItem(\"user\");\n        const localuserobj=JSON.parse(localuser);\n       // console.log(localuserobj);\n       if (\n        user.email === localuserobj.email &&\n        user.password === localuserobj.password\n      ) {\n        console.log(user, localuserobj);\n        localStorage.setItem(\"product\",JSON.stringify(product));\n        history.push(\"/OrderSend\");\n        \n      } else {\n        alert(\"*****Incorrect Credentials******\");\n      }  \n   \n      },2000);\n     };\n  return (\n         <div className=\"container-fluid\">       \n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n               <a className=\"navbar-brand\" href=\"#\"> <h5><span className=\"ml-3\">House</span><span  style={{color:\"darkblue\",fontFamily:\"cursive\",fontSize:\"120%\"}}>Beautify</span></h5></a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                 <span className=\"navbar-toggler-icon\"></span>\n              </button>\n             <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav mr-auto\">\n                 \n                <li className=\"nav-item active ml-4\">\n                <NavLink activeClassName=\"active_class\" to=\"/\"><button type=\"button\" className=\"btn btn-default\">Home</button></NavLink>\n                </li>\n                <li className=\"nav-item\">\n                <NavLink activeClassName=\"active_class\" to=\"/contact\"><button type=\"button\" className=\"btn btn-default\">Contact</button></NavLink>\n                </li>   \n                <li className=\"nav-item dropdown\">\n                <button type=\"button\" className=\"btn btn-default dropdown-toggle\"  id=\"navbarDropdownMenuLink\"  data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                  Product\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                {/* {product.map((item,index)=>(\n                   <NavLink activeClassName=\"active_class\"  className=\"dropdown-item\"  to=\"/product\" key={index}>{item.name}</NavLink>)                                    \n                )} */}\n                <NavLink activeClassName=\"active_class\"  className=\"dropdown-item\"  to=\"/product\" >Sofa Set</NavLink>\n                <NavLink activeClassName=\"active_class\"  className=\"dropdown-item\"  to=\"/productBed\" >Bed</NavLink>\n                <NavLink activeClassName=\"active_class\"  className=\"dropdown-item\"  to=\"/productDesk\">Desk</NavLink>\n                </div>\n              </li>\n              </ul>  \n              <ul className=\"navbar-nav navbar-right\"> \n                <li>\n                <button className=\"btn btn-info ml-3\" type=\"submit\" style={{width:\"80px\"}} onClick={handleShow}>Login</button>\n                </li> \n                <li>\n                <NavLink activeClassName=\"active_class\" to=\"/Receipt\"><button className=\"btn btn-info ml-3\"  type=\"submit\">Register</button></NavLink>\n                </li>  \n                <li>\n                <button className=\"btn btn-info ml-3\" type=\"submit\" style={{width:\"80px\"}} onClick={LogOut}>LogOut</button>\n                </li> \n                <li>\n                <span style={{color:\"royalblue\",fontFamily:\"cursive\",fontSize:\"1.3rem\",marginLeft:\"3px\"}}>Hello {localuserobj.name}</span>\n                </li>               \n             </ul>\n            </div>\n          </nav>\n           {/* Modal */}\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>    \n        <div className=\"card card-signin\">\n          <div className=\"card-body\">\n            <form className=\"form-signin\">\n              <div className=\"form-label-group\">\n                <input type=\"email\" id=\"inputEmail\" className=\"form-control\" value={user.email} onChange={proEmail}  placeholder=\"Email address\" required autofocus/>\n                <label for=\"inputEmail\"  >Email address</label>\n              </div>\n\n              <div className=\"form-label-group\">\n                <input type=\"password\" id=\"inputpassword\" className=\"form-control\" value={user.pwd} onChange={proPwd} placeholder=\"Password\" required/>\n                <label for=\"inputpassword\">Password</label>\n              </div>\n\n              <div className=\"custom-control custom-checkbox mb-3\">\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"/>\n                <label className=\"custom-control-label\" for=\"customCheck1\">Remember password</label>\n              </div>\n              <button className=\"btn btn-lg btn-success btn-block text-uppercase\" onClick={processLogin} type=\"submit\">Login</button><br></br>\n              <NavLink activeClassName=\"active_class\" to=\"/Receipt\"><button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Sign In</button></NavLink>\n             \n            </form>\n          </div>\n        </div>\n     \n        </Modal.Body>  \n      </Modal>\n       </div>\n  )\n}\n\n\n\nexport default App;\nexport {Nav};\n",["57","58"],"D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\Receipt.js",["59","60"],"\r\nimport React, { useState,useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\n function Receipt(){\r\n    return (\r\n      <div className=\"container-fluid\">\r\n          <OrderInfo/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  function OrderInfo()\r\n  {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n    //Login management\r\n    //set --get\r\n    const history=useHistory();\r\n    const [user,setUser]=useState({\r\n      name:\"\",\r\n      password:\"\",\r\n      email:\"\",\r\n      add:\"\",\r\n      mobile:\"\",\r\n    });\r\n    const proName = (e) => setUser({...user,name:e.target.value});\r\n    const proEmail = (e) => setUser({...user,email:e.target.value});\r\n    const proPwd = (e) => setUser({...user,password:e.target.value});\r\n    const proAdd = (e) => setUser({...user,add:e.target.value});\r\n    const proContact = (e) => setUser({...user,mobile:e.target.value});\r\n    \r\n    //Set Values on change\r\n  \r\n    /////////End   \r\n    const addUser=async ()=>{\r\n      if(user.email===\"\" || user.password===\"\")\r\n      {\r\n        return;\r\n      }\r\n     localStorage.setItem(\"user\",JSON.stringify(user));\r\n     setUser({\r\n      name:\"\",\r\n      password:\"\",\r\n      email:\"\",\r\n      add:\"\",\r\n      mobile:\"\", \r\n     });\r\n     handleShow();\r\n    };\r\n    \r\n\r\n      return (\r\n        <div className=\"container-fluid mt-3 bg-light\"> \r\n        <div className=\"row\">       \r\n            <div className=\"col-md-8 offset-md-2\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header bg-info\">Registration</div>\r\n                  <div className=\"card-body\">\r\n                     <div className=\"row\">\r\n                     <div className=\"col\">\r\n                          <label>Name :</label> <br/>\r\n                          <input type=\"text\" value={user.name} onChange={proName} className=\"form-control\" /> \r\n                          </div>      \r\n                          <div className=\"col\">\r\n                          <label>Email/Mobile No :</label> <br/>\r\n                          <input type=\"text\" value={user.email} onChange={proEmail} className=\"form-control\" /> \r\n                          </div>                     \r\n                     </div>\r\n                     <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <label>Password :</label><input type=\"text\" value={user.password} onChange={proPwd} className=\"form-control\" />   \r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <label>Confirm Password :</label><input type=\"text\" className=\"form-control\" />     \r\n                        </div> \r\n                     </div>                      \r\n                     <div className=\"row\">\r\n                <div className=\"col card mt-3\">\r\n                     <div className=\"card-header\">1. Delivery Address</div>\r\n                      <textarea className=\"form-control\" value={user.add} onChange={proAdd} placeholder=\"Address\"></textarea>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col card\">\r\n                     <div className=\"card-header\">2. Contact Number</div>\r\n                     <input type=\"number\" value={user.mobile} onChange={proContact} className=\"form-control\"/>\r\n                  </div> \r\n                  </div> \r\n                  <div className=\"row\">\r\n                     <div className=\"col mt-3\">\r\n                     <button className=\"btn btn-success\" onClick={addUser} style={{float:\"right\"}}>Register</button>     \r\n                        </div>                    \r\n                     </div>                           \r\n                </div>                                \r\n                </div>                  \r\n            </div>           \r\n       </div>\r\n       <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>    \r\n        <div className=\"card card-signin\">\r\n          <div className=\"card-body\">\r\n            <h3 style={{color:\"green\",fontFamily:\"cursive\"}}>Register Succesfully</h3>\r\n          </div>\r\n        </div>     \r\n        </Modal.Body>  \r\n      </Modal>\r\n        </div>\r\n      );\r\n  }\r\n \r\n\r\nexport default Receipt;","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\Contact.js",[],"D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\ProductG.js",["61","62","63","64","65"],"\r\n// import sofa1 from  \"../public/images/Sofa2.jpg\";\r\nimport \"./ProductG.css\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {useState,useEffect} from 'react';\r\nimport {Route, Switch, useHistory,useLocation,Link} from 'react-router-dom';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Receipt from \"./Receipt\";\r\nimport Sofa from \"./SofaData.json\";\r\nimport OrderSend from \"./OrderSend\";\r\n\r\nconst ProductG=()=>{\r\n  <Switch>\r\n     <Route exact  path=\"/OrderSend\" component={OrderSend} />\r\n  </Switch>\r\n    //Modal Hide Show\r\n    const location = useLocation();\r\n    console.log(location);\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n   // validate user\r\n    const history=useHistory();\r\n    const [user,setUser]=useState({email:\"\",password:\"\"});\r\n    const [loginProgress, setLoginProgress] = useState(false);\r\n    \r\n      const proEmail = (e) => setUser({...user,email:e.target.value});\r\n      const proPwd = (e) => setUser({...user,password:e.target.value});\r\n//Set Product\r\n      const [product,setProduct]=useState({productname:\"\",price:\"\"});\r\n      const ProductSave=(desc,pri)=>{\r\n          setProduct({\r\n            productname:desc,\r\n            price:pri,\r\n          });\r\n          console.log(product);\r\n          handleShow();\r\n      };\r\n  \r\n   const processLogin=()=>{\r\n    if (user.email === \"\" || user.pwd === \"\") {\r\n      alert(\"Fail\");\r\n      return;\r\n    }\r\n    setLoginProgress(true);\r\n    setTimeout(()=>{\r\n      const localuser=localStorage.getItem(\"user\");\r\n      const localuserobj=JSON.parse(localuser);\r\n     // console.log(localuserobj);\r\n     if (\r\n      user.email === localuserobj.email &&\r\n      user.password === localuserobj.password\r\n    ) {\r\n      console.log(user, localuserobj);\r\n      localStorage.setItem(\"product\",JSON.stringify(product));\r\n      history.push(\"/OrderSend\");\r\n      \r\n    } else {\r\n      alert(\"*****Incorrect Credentials******\");\r\n    }  \r\n \r\n    },2000);\r\n   };\r\n    return (         \r\n      \r\n       <div className=\"container-fluid\">\r\n        <Switch>       \r\n       <Route path=\"/Receipt\" component={Receipt} />\r\n     </Switch>  \r\n    <div className=\"row\" style={{height:\"80vh\"}}>\r\n        {Sofa.map((item,index)=>(\r\n            <div className=\"col-sm-4\">\r\n            <div className=\"card card-flip h-100\">\r\n                <div className=\"card-fron bg-white\">\r\n                    <div className=\"card-body\">\r\n                        <img src={item.src} style={{height:\"90%\",width:\"90%\"}} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-back bg-white\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{item.desc}</h3>\r\n                        <p className=\"card-text\">Prices : ₹{item.price}</p>\r\n                        <a href=\"#\" className=\"btn btn-outline-info\"  onClick={ProductSave.bind(this,item.desc,item.price)}  key={index}>Buy Now</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ))}\r\n      \r\n       \r\n    </div>\r\n    {/* Modal */}\r\n    <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>    \r\n        <div className=\"card card-signin\">\r\n          <div className=\"card-body\">\r\n            <form className=\"form-signin\">\r\n              <div className=\"form-label-group\">\r\n                <input type=\"email\" id=\"inputEmail\" className=\"form-control\" value={user.email} onChange={proEmail}  placeholder=\"Email address\" required autofocus/>\r\n                <label for=\"inputEmail\"  >Email address</label>\r\n              </div>\r\n\r\n              <div className=\"form-label-group\">\r\n                <input type=\"password\" id=\"inputpassword\" className=\"form-control\" value={user.pwd} onChange={proPwd} placeholder=\"Password\" required/>\r\n                <label for=\"inputpassword\">Password</label>\r\n              </div>\r\n\r\n              <div className=\"custom-control custom-checkbox mb-3\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"/>\r\n                <label className=\"custom-control-label\" for=\"customCheck1\">Remember password</label>\r\n              </div>\r\n              <button className=\"btn btn-lg btn-success btn-block text-uppercase\" onClick={processLogin} type=\"submit\">Login</button><br></br>\r\n              <NavLink activeClassName=\"active_class\" to=\"/Receipt\"><button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Sign In</button></NavLink>\r\n             \r\n            </form>\r\n          </div>\r\n        </div>\r\n     \r\n        </Modal.Body>  \r\n      </Modal>\r\n</div>    \r\n       \r\n    );\r\n}\r\n\r\n\r\nexport default ProductG;","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\HomeBody.js",["66","67","68","69"],"import \"./App.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport  web from \"../src/img/slide-img.jpg\";\r\nimport  web1 from \"../src/img/slide-img1.jpg\";\r\nimport  web2 from \"../src/img/slide-img2.jpg\";\r\nimport icon1 from \"../src/icons/bed.jpeg\";\r\nimport icon2 from \"../src/icons/dressing.jpeg\";\r\nimport icon3 from \"../src/icons/couch.jpeg\";\r\n\r\n\r\nfunction HomeBody(){\r\n  \r\n    // const Iconlist=[\r\n    //      {\r\n    //        id:\"I1\",\r\n    //        icon:icon1,\r\n    //        name:\"Bed\"\r\n    //      },\r\n    //      {\r\n    //       id:\"I2\",\r\n    //       icon:icon2,\r\n    //       name:\"Dressing Table\"\r\n    //     },\r\n    //     {\r\n    //       id:\"I3\",\r\n    //       icon:icon3,\r\n    //       name:\"Sofa Set\"\r\n    //     },\r\n    // ];\r\n  //console.log(Iconlist[0].name);\r\n    return(\r\n          <div className=\"container-fluid bg-light\">\r\n          <div className=\"row mt-3\">\r\n              {/* <div className=\"col-md-2 overflow-hidden\">\r\n                  <Pcards imgsrc={Iconlist[0].icon} name={Iconlist[0].name} idm={Iconlist[0].id}/>\r\n                  <Pcards imgsrc={Iconlist[1].icon} name={Iconlist[1].name} idm={Iconlist[1].id}/>\r\n                  <Pcards imgsrc={Iconlist[2].icon} name={Iconlist[2].name} idm={Iconlist[2].id}/>\r\n              </div>\r\n              <div className=\"col-md-2 overflow-hidden\">\r\n                  <Pcards imgsrc={Iconlist[0].icon} name={Iconlist[0].name} idm={Iconlist[0].id}/>\r\n                  <Pcards imgsrc={Iconlist[1].icon} name={Iconlist[1].name} idm={Iconlist[1].id}/>\r\n                  <Pcards imgsrc={Iconlist[2].icon} name={Iconlist[2].name} idm={Iconlist[2].id}/>\r\n                 \r\n              </div> */}\r\n              <div className=\"col-md-12 overflow-auto\">\r\n                  <Slides/>\r\n              </div>\r\n          </div>          \r\n          </div>\r\n    );\r\n  }\r\n  \r\n  \r\n  function Pcards(props)\r\n  {\r\n    return(\r\n      <div className=\"card mb-1 ml-1\" style={{height:\"20%\"}}>      \r\n      <div className=\"card-body\" style={{textAlign:\"center\"}}>\r\n      <img id={props.idm} src={props.imgsrc} alt=\"fur\" className=\"icon\"></img>\r\n        <p className=\"card-text\"><h6>{props.name}</h6></p>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n  function Slides()\r\n  { \r\n    const imgarr=[web,web1,web2];\r\n    return (\r\n      <div className=\"container-fluid\" style={{height:\"50%\"}}>\r\n                <Carousel>\r\n              <Carousel.Item interval={3000}>\r\n                <img\r\n                  className=\"mySlides\"\r\n                  src={imgarr[0]}\r\n                  alt=\"First slide\"\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>First slide label</h3>\r\n                  <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item interval={2000}>\r\n                <img\r\n                  className=\"mySlides\"\r\n                  src={imgarr[2]}\r\n                  alt=\"Third slide\"\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>Second slide label</h3>\r\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>           \r\n            </Carousel>\r\n      </div>\r\n    );\r\n  } \r\n       \r\nexport default HomeBody;\r\n","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\Login.js",[],"D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\ProductBed.js",["70","71","72","73","74"],"\r\n// import sofa1 from  \"../public/images/Sofa2.jpg\";\r\nimport \"./ProductG.css\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {useState,useEffect} from 'react';\r\nimport {Route, Switch, useHistory,useLocation,Link} from 'react-router-dom';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Receipt from \"./Receipt\";\r\nimport Bed from \"./Bed.json\";\r\nimport OrderSend from \"./OrderSend\";\r\n\r\nconst ProductG=()=>{\r\n  <Switch>\r\n     <Route exact  path=\"/OrderSend\" component={OrderSend} />\r\n  </Switch>\r\n    //Modal Hide Show\r\n    const location = useLocation();\r\n    console.log(location);\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n   // validate user\r\n    const history=useHistory();\r\n    const [user,setUser]=useState({email:\"\",password:\"\"});\r\n    const [loginProgress, setLoginProgress] = useState(false);\r\n    \r\n      const proEmail = (e) => setUser({...user,email:e.target.value});\r\n      const proPwd = (e) => setUser({...user,password:e.target.value});\r\n//Set Product\r\n      const [product,setProduct]=useState({productname:\"\",price:\"\"});\r\n      const ProductSave=(desc,pri)=>{\r\n          setProduct({\r\n            productname:desc,\r\n            price:pri,\r\n          });\r\n          console.log(product);\r\n          handleShow();\r\n      };\r\n  \r\n   const processLogin=()=>{\r\n    if (user.email === \"\" || user.pwd === \"\") {\r\n      alert(\"Fail\");\r\n      return;\r\n    }\r\n    setLoginProgress(true);\r\n    setTimeout(()=>{\r\n      const localuser=localStorage.getItem(\"user\");\r\n      const localuserobj=JSON.parse(localuser);\r\n     // console.log(localuserobj);\r\n     if (\r\n      user.email === localuserobj.email &&\r\n      user.password === localuserobj.password\r\n    ) {\r\n      console.log(user, localuserobj);\r\n      localStorage.setItem(\"product\",JSON.stringify(product));\r\n      history.push(\"/OrderSend\");\r\n      \r\n    } else {\r\n      alert(\"*****Incorrect Credentials******\");\r\n    }  \r\n \r\n    },2000);\r\n   };\r\n    return (         \r\n      \r\n       <div className=\"container-fluid\">\r\n        <Switch>       \r\n       <Route path=\"/Receipt\" component={Receipt} />\r\n     </Switch>  \r\n    <div className=\"row\" style={{height:\"80vh\"}}>\r\n        {Bed.map((item,index)=>(\r\n            <div className=\"col-sm-4\">\r\n            <div className=\"card card-flip h-100\">\r\n                <div className=\"card-fron bg-white\">\r\n                    <div className=\"card-body\">\r\n                        <img src={item.src} style={{height:\"90%\",width:\"90%\"}} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-back bg-white\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{item.desc}</h3>\r\n                        <p className=\"card-text\">Prices : ₹{item.price}</p>\r\n                        <a href=\"#\" className=\"btn btn-outline-info\"  onClick={ProductSave.bind(this,item.desc,item.price)}  key={index}>Buy Now</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ))}\r\n      \r\n       \r\n    </div>\r\n    {/* Modal */}\r\n    <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>    \r\n        <div className=\"card card-signin\">\r\n          <div className=\"card-body\">\r\n            <form className=\"form-signin\">\r\n              <div className=\"form-label-group\">\r\n                <input type=\"email\" id=\"inputEmail\" className=\"form-control\" value={user.email} onChange={proEmail}  placeholder=\"Email address\" required autofocus/>\r\n                <label for=\"inputEmail\"  >Email address</label>\r\n              </div>\r\n\r\n              <div className=\"form-label-group\">\r\n                <input type=\"password\" id=\"inputpassword\" className=\"form-control\" value={user.pwd} onChange={proPwd} placeholder=\"Password\" required/>\r\n                <label for=\"inputpassword\">Password</label>\r\n              </div>\r\n\r\n              <div className=\"custom-control custom-checkbox mb-3\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"/>\r\n                <label className=\"custom-control-label\" for=\"customCheck1\">Remember password</label>\r\n              </div>\r\n              <button className=\"btn btn-lg btn-success btn-block text-uppercase\" onClick={processLogin} type=\"submit\">Login</button><br></br>\r\n              <NavLink activeClassName=\"active_class\" to=\"/Receipt\"><button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Sign In</button></NavLink>\r\n             \r\n            </form>\r\n          </div>\r\n        </div>\r\n     \r\n        </Modal.Body>  \r\n      </Modal>\r\n</div>    \r\n       \r\n    );\r\n}\r\n\r\n\r\nexport default ProductG;","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\ProductDesk.js",["75","76","77","78","79"],"\r\n// import sofa1 from  \"../public/images/Sofa2.jpg\";\r\nimport \"./ProductG.css\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {useState,useEffect} from 'react';\r\nimport {Route, Switch, useHistory,useLocation,Link} from 'react-router-dom';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Receipt from \"./Receipt\";\r\nimport Desk from \"./Desk.json\";\r\nimport OrderSend from \"./OrderSend\";\r\n\r\nconst ProductG=()=>{\r\n  <Switch>\r\n     <Route exact  path=\"/OrderSend\" component={OrderSend} />\r\n  </Switch>\r\n    //Modal Hide Show\r\n    const location = useLocation();\r\n    console.log(location);\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n   // validate user\r\n    const history=useHistory();\r\n    const [user,setUser]=useState({email:\"\",password:\"\"});\r\n    const [loginProgress, setLoginProgress] = useState(false);\r\n    \r\n      const proEmail = (e) => setUser({...user,email:e.target.value});\r\n      const proPwd = (e) => setUser({...user,password:e.target.value});\r\n//Set Product\r\n      const [product,setProduct]=useState({productname:\"\",price:\"\"});\r\n      const ProductSave=(desc,pri)=>{\r\n          setProduct({\r\n            productname:desc,\r\n            price:pri,\r\n          });\r\n          console.log(product);\r\n          handleShow();\r\n      };\r\n  \r\n   const processLogin=()=>{\r\n    if (user.email === \"\" || user.pwd === \"\") {\r\n      alert(\"Fail\");\r\n      return;\r\n    }\r\n    setLoginProgress(true);\r\n    setTimeout(()=>{\r\n      const localuser=localStorage.getItem(\"user\");\r\n      const localuserobj=JSON.parse(localuser);\r\n     // console.log(localuserobj);\r\n     if (\r\n      user.email === localuserobj.email &&\r\n      user.password === localuserobj.password\r\n    ) {\r\n      console.log(user, localuserobj);\r\n      localStorage.setItem(\"product\",JSON.stringify(product));\r\n      history.push(\"/OrderSend\");\r\n      \r\n    } else {\r\n      alert(\"*****Incorrect Credentials******\");\r\n    }  \r\n \r\n    },2000);\r\n   };\r\n    return (         \r\n      \r\n       <div className=\"container-fluid\">\r\n        <Switch>       \r\n       <Route path=\"/Receipt\" component={Receipt} />\r\n     </Switch>  \r\n    <div className=\"row\" style={{height:\"80vh\"}}>\r\n        {Desk.map((item,index)=>(\r\n            <div className=\"col-sm-4\">\r\n            <div className=\"card card-flip h-100\">\r\n                <div className=\"card-fron bg-white\">\r\n                    <div className=\"card-body\">\r\n                        <img src={item.src} style={{height:\"90%\",width:\"90%\"}} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-back bg-white\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{item.desc}</h3>\r\n                        <p className=\"card-text\">Prices : ₹{item.price}</p>\r\n                        <a href=\"#\" className=\"btn btn-outline-info\"  onClick={ProductSave.bind(this,item.desc,item.price)}  key={index}>Buy Now</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ))}\r\n      \r\n       \r\n    </div>\r\n    {/* Modal */}\r\n    <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>    \r\n        <div className=\"card card-signin\">\r\n          <div className=\"card-body\">\r\n            <form className=\"form-signin\">\r\n              <div className=\"form-label-group\">\r\n                <input type=\"email\" id=\"inputEmail\" className=\"form-control\" value={user.email} onChange={proEmail}  placeholder=\"Email address\" required autofocus/>\r\n                <label for=\"inputEmail\"  >Email address</label>\r\n              </div>\r\n\r\n              <div className=\"form-label-group\">\r\n                <input type=\"password\" id=\"inputpassword\" className=\"form-control\" value={user.pwd} onChange={proPwd} placeholder=\"Password\" required/>\r\n                <label for=\"inputpassword\">Password</label>\r\n              </div>\r\n\r\n              <div className=\"custom-control custom-checkbox mb-3\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"/>\r\n                <label className=\"custom-control-label\" for=\"customCheck1\">Remember password</label>\r\n              </div>\r\n              <button className=\"btn btn-lg btn-success btn-block text-uppercase\" onClick={processLogin} type=\"submit\">Login</button><br></br>\r\n              <NavLink activeClassName=\"active_class\" to=\"/Receipt\"><button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Sign In</button></NavLink>\r\n             \r\n            </form>\r\n          </div>\r\n        </div>\r\n     \r\n        </Modal.Body>  \r\n      </Modal>\r\n</div>    \r\n       \r\n    );\r\n}\r\n\r\n\r\nexport default ProductG;","D:\\CDAC\\Topics\\Web_Technologies\\Practice\\MiniProject\\my-app\\src\\OrderSend.js",["80","81"],{"ruleId":"82","severity":1,"message":"83","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":15},{"ruleId":"82","severity":1,"message":"86","line":2,"column":18,"nodeType":"84","messageId":"85","endLine":2,"endColumn":27},{"ruleId":"82","severity":1,"message":"87","line":6,"column":35,"nodeType":"84","messageId":"85","endLine":6,"endColumn":46},{"ruleId":"82","severity":1,"message":"88","line":39,"column":18,"nodeType":"84","messageId":"85","endLine":39,"endColumn":28},{"ruleId":"82","severity":1,"message":"89","line":40,"column":10,"nodeType":"84","messageId":"85","endLine":40,"endColumn":11},{"ruleId":"82","severity":1,"message":"90","line":40,"column":12,"nodeType":"84","messageId":"85","endLine":40,"endColumn":16},{"ruleId":"82","severity":1,"message":"91","line":77,"column":10,"nodeType":"84","messageId":"85","endLine":77,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":108,"column":16,"nodeType":"94","endLine":108,"endColumn":53},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"82","severity":1,"message":"86","line":2,"column":26,"nodeType":"84","messageId":"85","endLine":2,"endColumn":35},{"ruleId":"82","severity":1,"message":"99","line":24,"column":11,"nodeType":"84","messageId":"85","endLine":24,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":5,"column":18,"nodeType":"84","messageId":"85","endLine":5,"endColumn":27},{"ruleId":"82","severity":1,"message":"100","line":6,"column":47,"nodeType":"84","messageId":"85","endLine":6,"endColumn":51},{"ruleId":"82","severity":1,"message":"91","line":26,"column":12,"nodeType":"84","messageId":"85","endLine":26,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":77,"column":25,"nodeType":"94","endLine":77,"endColumn":82},{"ruleId":"92","severity":1,"message":"93","line":84,"column":25,"nodeType":"94","endLine":84,"endColumn":138},{"ruleId":"82","severity":1,"message":"103","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":13},{"ruleId":"82","severity":1,"message":"104","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":13},{"ruleId":"82","severity":1,"message":"105","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":13},{"ruleId":"82","severity":1,"message":"106","line":54,"column":12,"nodeType":"84","messageId":"85","endLine":54,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":5,"column":18,"nodeType":"84","messageId":"85","endLine":5,"endColumn":27},{"ruleId":"82","severity":1,"message":"100","line":6,"column":47,"nodeType":"84","messageId":"85","endLine":6,"endColumn":51},{"ruleId":"82","severity":1,"message":"91","line":26,"column":12,"nodeType":"84","messageId":"85","endLine":26,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":77,"column":25,"nodeType":"94","endLine":77,"endColumn":82},{"ruleId":"92","severity":1,"message":"93","line":84,"column":25,"nodeType":"94","endLine":84,"endColumn":138},{"ruleId":"82","severity":1,"message":"86","line":5,"column":18,"nodeType":"84","messageId":"85","endLine":5,"endColumn":27},{"ruleId":"82","severity":1,"message":"100","line":6,"column":47,"nodeType":"84","messageId":"85","endLine":6,"endColumn":51},{"ruleId":"82","severity":1,"message":"91","line":26,"column":12,"nodeType":"84","messageId":"85","endLine":26,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":77,"column":25,"nodeType":"94","endLine":77,"endColumn":82},{"ruleId":"92","severity":1,"message":"93","line":84,"column":25,"nodeType":"94","endLine":84,"endColumn":138},{"ruleId":"82","severity":1,"message":"86","line":1,"column":9,"nodeType":"84","messageId":"85","endLine":1,"endColumn":18},{"ruleId":"82","severity":1,"message":"107","line":1,"column":20,"nodeType":"84","messageId":"85","endLine":1,"endColumn":28},"no-unused-vars","'Receipt' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'setProduct' is assigned a value but never used.","'p' is assigned a value but never used.","'setP' is assigned a value but never used.","'loginProgress' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["108"],"no-negated-in-lhs",["109"],"'history' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'icon1' is defined but never used.","'icon2' is defined but never used.","'icon3' is defined but never used.","'Pcards' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]